name: End-to-end tests

on:
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123
          POSTGRES_DB: nest
        ports:
          - 5435:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16

    - name: Install dependencies
      run: npm ci

    - name: Run end-to-end tests
      run: npm run test:gitaction:e2e
      env:
        DATABASE_URL: postgresql://postgres:123@localhost:5435/nest?schema=public
        jobs:

  deployment:
    needs: e2e-tests
    runs-on: ubuntu-latest
    steps:
    - name: Install jq
      run: sudo apt-get install jq

    - name: Create deployment
      id: create_deployment
      run: |
        DEPLOYMENT_ID=$(curl -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/deployments \
          -d '{
            "ref": "${{ github.sha }}",
            "environment": "staging"
          }' | jq '.id')
        echo "::set-output name=deployment_id::$DEPLOYMENT_ID"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update deployment status to success
      run: |
        curl -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/deployments/${{ steps.create_deployment.outputs.deployment_id }}/statuses \
          -d '{
            "state": "success",
            "environment": "staging"
          }'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
